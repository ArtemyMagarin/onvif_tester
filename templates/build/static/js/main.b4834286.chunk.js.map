{"version":3,"sources":["actions/dashboardActions.js","components/devicesList.jsx","components/deviceInfoTabContent.jsx","config.js","components/deviceStreamTabContent.jsx","components/table.jsx","components/deviceTestTabContent.jsx","components/deviceInfo.jsx","components/dashboard.jsx","components/navbar.jsx","App.js","reducers/dashboardReducer.js","reducers/index.js","middleware/apiMiddleware.js","index.js","store/configureStore.js"],"names":["getDevicesList","type","api","url","method","getDevice","ip","port","data","showCurrentDevice","ListItem","_ref","id","text","onClick","active","pending","react_default","a","createElement","key","className","concat","DevicesList","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","props","dashboardActions","_this","listItems","list","map","item","devicesList_ListItem","currentDevice","show","Fragment","data-toggle","href","role","aria-expanded","aria-controls","devices","React","Component","connect","state","dashboardReducer","dispatch","bindActionCreators","DashboardAction","DeviceInfoTabContent","currentDeviceData","apiUrl","DeviceStreamTabContent","call","togglePicture","tab","setState","snapshot_url","stream_url","indexOf","Date","now","toggler","checked","image","src","Table","row_data","filter","test","service","selected_test","rows","length","available_tests","name","scope","DeviceTestTabContent","chooseTestType","device","_this2","dropdownItems","aria-haspopup","aria-labelledby","table_Table","DeviceInfo","currentTab","currentTabContent","deviceInfoTabContent","deviceStreamTabContent_DeviceStreamTabContent","deviceTestTabContent_DeviceTestTabContent","Dashboard","devicesList","deviceInfo","dashboard","Navbar","App","navbar","initialState","error","combineReducers","undefined","action","objectSpread","_doRequest","dfd","$","done","resolve","fail","err","reject","promise","apiMiddleware","store","next","createStore","rootReducer","applyMiddleware","ReduxThunk","logger","configureStore","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b4834286.chunk.js","sourcesContent":["export function getDevicesList() {\n    return {\n        type: 'GET_DEVICES_LIST',\n        api: {\n            url: '/api/devices',\n            method: 'GET'\n        },\n    };\n}\n\nexport function getDevice(ip, port) {\n    return {\n        type: 'GET_DEVICE',\n        api: {\n            url: '/api/device',\n            method: 'GET',\n            data : { ip, port }\n        },\n    };\n}\n\nexport function showCurrentDevice() {\n\treturn {\n\t\ttype: 'HIDE_CURRENT_DEVICE',\n\t}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as DashboardAction from '../actions/dashboardActions';\nimport '../styles/horizontal-loader.css';\n\nfunction mapStateToProps(state) {\n    return {\n        list: state.dashboardReducer.list.devices,\n        devices: state.dashboardReducer.list,\n        currentDevice: state.dashboardReducer.currentDevice,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        dashboardActions: bindActionCreators(DashboardAction, dispatch)\n    }\n}\n\nconst ListItem = ({id, text, onClick, active, pending}) => {\n    return (\n        <button key={id} type=\"button\" onClick={onClick} className={`list-group-item d-flex justify-content-between list-group-item-action${active?\" active\":\"\"}`}>\n            {text}\n            {pending?(<div className=\"typing_loader\"></div>):(null)}\n        </button>\n    )\n}\n\nexport class DevicesList extends React.Component {\n\n    componentDidMount() {\n        this.props.dashboardActions.getDevicesList();\n    }\n\n    render() {\n        const listItems = this.props.list.map((item, id) => (\n            <ListItem \n                key={id} \n                text={`${item.ip}:${item.port}`} \n                onClick={() => {this.props.dashboardActions.getDevice(item.ip, item.port)}}\n                active={this.props.currentDevice.data.ip === item.ip\n                        && this.props.currentDevice.data.port === item.port\n                        && this.props.currentDevice.show} \n                pending={this.props.currentDevice.data.ip === item.ip\n                        && this.props.currentDevice.data.port === item.port\n                        && this.props.currentDevice.pending}\n                />\n        ))\n\n        return (\n            <React.Fragment>\n                <div className=\"row mb-2\">\n                    <div className={'col d-flex align-items-baseline justify-content-between'}>\n                        <span className=\"h5 m-0\">Devices <a className=\"d-sm-inline-block d-md-none small\" data-toggle=\"collapse\" href=\"#collapseDevicesList\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseDevicesList\">toggle</a></span>\n                        {this.props.devices.pending?(<div className=\"typing_loader\"></div>):(<a href=\"#\" onClick={() => {this.props.dashboardActions.getDevicesList()}}>Reload</a>)}\n                    </div>\n                </div>\n                <div className=\"collapse show\" id=\"collapseDevicesList\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"list-group\">\n                                {listItems}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n            \n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DevicesList)\n","import React from 'react';\n\nconst DeviceInfoTabContent = (props) => {\n    return (\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">Device Information</h5>\n            <div className=\"card\">\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\">Address: {`${props.currentDeviceData['ip']}:${props.currentDeviceData['port']}`}</li>\n                    <li className=\"list-group-item\">Manufacturer: {props.currentDeviceData['Manufacturer']}</li>\n                    <li className=\"list-group-item\">Model: {props.currentDeviceData['Model']}</li>\n                    <li className=\"list-group-item\">Firmware Version: {props.currentDeviceData['Firmware Version']}</li>\n                    <li className=\"list-group-item\">Serial Number: {props.currentDeviceData['Serial Number']}</li>\n                    <li className=\"list-group-item\">Hardware ID: {props.currentDeviceData['Hardware ID']}</li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default DeviceInfoTabContent;","export const apiUrl = process.env.NODE_ENV === 'production' ? 'http://onvif.auditory.ru' : 'http://127.0.0.1:5000';\n","import React from 'react';\nimport { apiUrl } from '../config';\nimport '../styles/switch.css';\nimport '../styles/style.css';\n\n\nexport default class DeviceStreamTabContent extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttab: 'snapshot'\n\t\t}\n\t}\n\n\ttogglePicture = () => {\n\t\tif (this.state.tab === 'snapshot') {\n\t\t\tthis.setState({tab: 'stream'});\n\t\t} else {\n\t\t\tthis.setState({tab: 'snapshot'});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet url = apiUrl + (this.state.tab === 'snapshot' ? this.props.snapshot_url : this.props.stream_url);\n\t\turl = url + (~url.indexOf('?')?'&':'?') + `t=${Date.now()}`; \n\t\t\n\t\tconst toggler = (\n\t\t\t<div className=\"switch-wrapper\">\n\t\t\t\tShow snapshot\n\t\t        <label className=\"switch\">\n\t\t            <input type=\"checkbox\" checked={this.state.tab === 'stream'} onClick={this.togglePicture}/>\n\t\t            <span className=\"slider\"></span>\n\t\t        </label>\n\t\t        Show Stream\n\t\t    </div>\n\t\t)\n\t\tconst image = (\n\t\t\t<img src={url} className=\"stream-image\"/>\n\t\t)\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{toggler}\n\t\t\t\t{image}\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\n\nexport default class Table extends Component {\n    constructor(props) {\n      super(props)\n    }\n\n    static getDerivedStateFromProps(props, state) {\n      return {\n        currentDeviceData: props.currentDeviceData,\n        selected_test: props.selected_test\n      }\n    }\n\n    render() {\n\n      const row_data = this.props.currentDeviceData['avaliable_tests'].filter(test => (\n        test.service === this.props.selected_test\n      ))\n\n      const rows = row_data.length ? (row_data[0].available_tests.map((name, id) => (\n        <React.Fragment>\n          <tr>\n             <td>\n               {`${id+1}`}  \n             </td>  \n             <td>\n               <input type=\"checkbox\"/>  \n             </td>  \n             <td>\n               {`${name}`}  \n             </td>  \n          </tr>\n        </React.Fragment>\n      ))) : (null)\n\n       \n  \treturn (\n  \t\t<table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Select</th>\n            <th scope=\"col\">Test</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport Table from './table.jsx'\n\nexport default class DeviceTestTabContent extends Component {\n\n    state = {\n      selected_test: null\n    }\n\n    chooseTestType = (device) => {\n      this.setState({selected_test: device});\n    }\n\n\n    render() {\n        const { currentDeviceData } = this.props;\n        const dropdownItems = currentDeviceData['Supported Services'].map((device, id) =>                 \n          <a \n            className={`dropdown-item${this.state.selected_test === device ? \" active\" : \"\"}`} \n            href=\"#\" \n            key={ id }\n            onClick={() => {this.chooseTestType(device)}}\n            >\n              {device}\n            </a>\n        )       \n\n        return (\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Device Test</h5>\n              \n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-sm-12 col-md-4\">\n                    <div className=\"dropdown\">\n                      <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {this.state.selected_test?this.state.selected_test:\"Choose test\"}\n                      </button>\n                      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                      { dropdownItems }\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-12 col-md-4\">\n                    <button className=\"btn btn-secondary\" type=\"button\">\n                      About Test\n                      </button>\n                  </div>\n                  <div className=\"col-sm-12 col-md-4\"></div>\n                </div>\n              </div>\n              <div className=\"container\">\n                <div className=\"row mt-1\">\n                  { <Table currentDeviceData={this.props.currentDeviceData} selected_test={this.state.selected_test}/> }\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as DashboardAction from '../actions/dashboardActions';\nimport '../styles/loader.css';\n\nimport DeviceInfoTabContent from './deviceInfoTabContent.jsx'\nimport DeviceStreamTabContent from './deviceStreamTabContent.jsx'\nimport DeviceTestTabContent from './deviceTestTabContent.jsx'\n\n\nfunction mapStateToProps(state) {\n    return {\n        list: state.dashboardReducer.list,\n        currentDevice: state.dashboardReducer.currentDevice,\n        currentDeviceData: state.dashboardReducer.currentDevice.data\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        dashboardActions: bindActionCreators(DashboardAction, dispatch)\n    }\n}\n\n\nexport class DeviceInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentTab: 'info'\n        }\n    }\n\n    render() {\n        let currentTabContent = (null);\n        if (this.state.currentTab === 'info') {\n            currentTabContent = (<DeviceInfoTabContent currentDeviceData={this.props.currentDeviceData}/>)\n        }\n        if (this.state.currentTab === 'stream') {\n            currentTabContent = (<DeviceStreamTabContent snapshot_url={this.props.currentDeviceData['snapshot_url']} stream_url={this.props.currentDeviceData['stream_url']}/>);\n        }\n        if (this.state.currentTab === 'testing') {\n            currentTabContent = (<DeviceTestTabContent currentDeviceData={this.props.currentDeviceData}/>);\n        }\n\n        if (this.props.currentDevice.show) {\n            return (\n                <div className=\"card text-left\">\n                  <div className=\"card-header\">\n                    <ul className=\"nav nav-tabs card-header-tabs\">\n                      <li className=\"nav-item\">\n                        <a \n                            className={`nav-link ${this.state.currentTab === 'info'?'active':''}`} \n                            onClick={()=>{this.setState({currentTab: 'info'})}}\n                            href=\"#\">\n                                Information\n                        </a>\n                      </li>\n                      <li className=\"nav-item\">\n                        <a \n                            className={`nav-link ${this.state.currentTab === 'stream'?'active':''}`} \n                            onClick={()=>{this.setState({currentTab: 'stream'})}}\n                            href=\"#\">\n                                Stream\n                        </a>\n                      </li>\n                      <li className=\"nav-item\">\n                        <a \n                            className={`nav-link ${this.state.currentTab === 'testing'?'active':''}`} \n                            onClick={()=>{this.setState({currentTab: 'testing'})}}\n                            href=\"#\">\n                                Testing\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                  {currentTabContent}\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"card text-center\">\n                  <div className=\"card-body d-flex align-items-center justify-content-center\">\n                    <h4 className=\"card-title text-center mb-0\">{this.props.currentDevice.pending || this.props.list.pending ?'Loading...':'Choose device from the list'}</h4>\n                    {this.props.currentDevice.pending || this.props.list.pending ? (<div className=\"loader\"></div>):(null)}\n                  </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DeviceInfo)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as DashboardAction from '../actions/dashboardActions';\nimport DevicesList from './devicesList.jsx';\nimport DeviceInfo from './deviceInfo.jsx';\n\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tdashboard: state.dashboardReducer.list,\n\t\tcurrentDevice: state.dashboardReducer.currentDevice,\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        dashboardActions: bindActionCreators(DashboardAction, dispatch)\n    }\n}\n\n\nexport class Dashboard extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm-12 col-md-3  mb-3\">\n\t\t\t\t\t<DevicesList/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm-12 col-md-9\">\n\t\t\t\t\t<DeviceInfo/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Dashboard)\n","import React from 'react';\n// import brand from '../assets/logo-white-onvif.png';\n\nconst Navbar = (props) => {\n\treturn (\n\t\t<nav className=\"navbar navbar-dark bg-primary mb-3\">\n\t\t \t<a className=\"navbar-brand\" href=\"#\">\n\t\t\t    { /*<img src={brand} height={\"30\"} className={\"d-inline-block align-top mr-4\"} alt={\"\"}/> */}\n\t\t\t    ONVIF Compliance Tester\n\t\t\t</a>\n\t\t</nav>\n\t)\n}\n\nexport default Navbar;","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport bootstrap from 'bootstrap';\n\nimport './styles/common.css';\n\nimport Dashboard from './components/dashboard.jsx'\nimport Navbar from './components/navbar.jsx'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar/>\n        <div className=\"container\">\n          <Dashboard/>\n        </div> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n\tlist: {\n  \t    devices: [],\n\t    pending: false,\n\t    error: false\n    },\n    currentDevice: {\n    \tdata: {},\n    \tpending: false,\n    \terror: false,\n    \tshow: false\n    }\n}\n\nexport default function dashboardReducer(state = initialState, action) {\n\n  \tswitch (action.type) {\n  \t\tcase \"GET_DEVICES_LIST\": {\n  \t\t\tif (action.data) {\n  \t\t\t\tconst list = {\n  \t\t\t\t\tdevices: action.data,\n  \t\t\t\t\tpending: false,\n  \t\t\t\t\terror: false\n  \t\t\t\t}\n  \t\t\t\treturn { ...state, list }\n  \t\t\t}\n  \t\t\tbreak\n  \t\t}\n  \t\tcase \"GET_DEVICES_LIST__PENDING\": {\n\t\t\tconst list = {\n\t\t\t\tdevices: [],\n\t\t\t\tpending: true,\n\t\t\t\terror: false\n\t\t\t}\n\t\t\tconst currentDevice = {\n\t\t    \tdata: {},\n\t\t    \tpending: false,\n\t\t    \terror: false,\n\t\t    \tshow: false\n\t\t    }\n\n\t\t\treturn { ...state, currentDevice, list }\n  \t\t}\n  \t\tcase \"GET_DEVICES_LIST__ERROR\": {\n\t\t\tconst list = {\n\t\t\t\tdevices: [],\n\t\t\t\tpending: false,\n\t\t\t\terror: true\n\t\t\t}\n\t\t\treturn { ...state, list }\n  \t\t}\n\n\n  \t\tcase \"GET_DEVICE\": {\n  \t\t\tif (action.data) {\n  \t\t\t\tconst currentDevice = {\n  \t\t\t\t\tdata: action.data,\n\t\t\t    \tpending: false,\n\t\t\t    \terror: false,\n\t\t\t    \tshow: true\n  \t\t\t\t}\n  \t\t\t\treturn { ...state, currentDevice }\n  \t\t\t}\n  \t\t\tbreak\n  \t\t}\n\n  \t\tcase \"GET_DEVICE__PENDING\": {\n\t\t\tconst currentDevice = {\n\t\t\t\tdata: {...action.api.data},\n\t\t    \tpending: true,\n\t\t    \terror: false,\n\t\t    \tshow: false\n\t\t\t}\n\t\t\treturn { ...state, currentDevice }\n  \t\t}\n\n  \t\tcase \"GET_DEVICE__ERROR\": {\n  \t\t\tconst currentDevice = {\n\t\t\t\tdata: {},\n\t\t    \tpending: false,\n\t\t    \terror: true,\n\t\t    \tshow: false\n\t\t\t}\n\t\t\treturn { ...state, currentDevice }\n  \t\t}\n\n  \t\tcase \"HIDE_CURRENT_DEVICE\": {\n  \t\t\tconst currentDevice = { ...state.currentDevice, show: false }\n  \t\t\treturn { ...state,  ...currentDevice }\n  \t\t}\n  \t\tdefault: {\n  \t\t\tbreak\n  \t\t}\n  \t}\n  \treturn state\n}","import { combineReducers } from 'redux'\nimport dashboardReducer from './dashboardReducer'\n\nexport default combineReducers({\n  dashboardReducer,\n})","import { apiUrl } from '../config'\nimport * as $ from 'jquery';\n\n\nconst apiMiddleware = store => next => action => {\n  var type = action.type;\n    if (action.api) {\n        _doRequest(action).done(function(data){\n            action.type = type;\n            action.data = data;\n            delete action.api;\n            next(action);\n        }).fail(function(data){\n            action.type = type + \"__ERROR\";\n            action.data = data;\n            next(action); \n        });\n        action.type = type + \"__PENDING\";\n        next(action);\n    } else {\n        next(action);\n    }\n}\n\nconst _doRequest = function(action) {\n    const dfd = $.Deferred();\n\n    action.api.url = apiUrl + action.api.url;\n\n    $.ajax( action.api )\n    .done(function(data){\n        dfd.resolve(data);\n    })\n    .fail(function(err){\n        dfd.reject(err);\n    });\n\n    return dfd.promise();\n}\n\nexport default apiMiddleware","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport configureStore from './store/configureStore'\n\nconst store = configureStore()\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)","import { createStore, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk' \nimport logger from 'redux-logger'\t\nimport rootReducer from '../reducers'\nimport apiMiddleware from '../middleware/apiMiddleware'\n\nexport default function configureStore(initialState = {}) {\n  const store = createStore(\n  \trootReducer, \n  \tapplyMiddleware(ReduxThunk, apiMiddleware, logger),\n  \t\n  )\n  return store\n}"],"sourceRoot":""}